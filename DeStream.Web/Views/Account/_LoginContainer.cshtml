@using DeStream.Web.Models

@model LoginMoodel
@{


}
@using (Ajax.BeginForm("Login", null, new AjaxOptions { UpdateTargetId = "loginForm",OnBegin="showPreloader()",
    OnComplete = "hidePreloader()"}, new { @class = "form -element", id = "loginForm" }))
{
    @Html.AntiForgeryToken()
    if (!ViewData.ModelState.IsValid)
    {
                foreach (var keyVal in ViewData.ModelState.Where(x=>x.Value.Errors.Any()))
                {
                    <p class="text-red text-center">
                        @keyVal.Value.Errors.First().ErrorMessage
                    </p>
                }
    }


    <div class="form-group has-feedback">
        @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Email", @type = "email" })
        <span class="ion ion-email form-control-feedback"></span>
    </div>
    <div class="form-group has-feedback">
        @Html.TextBoxFor(x => x.Password, new { @class = "form-control", placeholder = "Password", @type = "password" })
        <span class="ion ion-locked form-control-feedback"></span>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="checkbox">
                <input type="checkbox" id="basic_checkbox_1" name="RememberMe">
                <label for="basic_checkbox_1">Remember me</label>
            </div>
        </div>
        <div class="col-6">
            <div class="fog-pwd">
                <a href="javascript:void(0)"><i class="ion ion-locked"></i> Forget password?</a><br>
            </div>
        </div>
        <div class="col-12 text-center">
            <button type="submit" class="btn btn-info btn-block btn-flat margin-top-10">Log in</button>
        </div>
    </div>
}